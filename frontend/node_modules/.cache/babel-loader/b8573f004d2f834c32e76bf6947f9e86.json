{"ast":null,"code":"import _slicedToArray from \"/Users/sindremoldeklev/Documents/kompetansesjekkeren/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sindremoldeklev/Documents/kompetansesjekkeren/frontend/src/pages/sokpage.tsx\";\nimport React, { useState, useReducer } from 'react';\nimport { reducer } from \"../types/reducer\";\nimport { initialState } from '../types/domain';\nimport OppsummeringEnhetsregister from '../components/oppsummering-enhetsregister';\nimport { Form, Button } from 'semantic-ui-react';\nimport { ARBEIDSTILSYNET_HOST_AND_PORT } from '../konstanter';\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext = React.createContext({});\n\nfunction Sokpage() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        orgnr = _useState2[0],\n        setOrgnr = _useState2[1];\n\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  function sokIEnhetsregisteret() {\n    if (orgnr.length === 9) {\n      dispatch({\n        type: \"DATA/HENTER_DATA\"\n      });\n      fetch(\"/enhetsregisteret?organisasjonsnummer=\".concat(orgnr)).then(data => data.json()).then(data => {\n        dispatch({\n          type: \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\",\n          data: data[\"_embedded\"]\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"DATA/HENTING_AV_DATA_ERROR\",\n          error: \"Klarte ikke hente data fra enhetsregisteret\"\n        });\n        console.warn(\"Klarte ikke hente data fra enhetsregisteret\", err);\n      });\n    }\n  }\n\n  function sokHosArbeidstilsynet() {\n    if (orgnr.length === 9) {\n      dispatch({\n        type: \"DATA/HENTER_DATA\"\n      });\n      fetch(\"\".concat(ARBEIDSTILSYNET_HOST_AND_PORT, \"?query=\").concat(orgnr)).then(data => {\n        console.log(\"Data\", data);\n        return data.json();\n      }).then(data => {\n        console.log(data);\n        dispatch({\n          type: \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\",\n          data: data[0].Organisation\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"DATA/HENTING_AV_DATA_ERROR\",\n          error: \"Klarte ikke hente data fra Arbeidstilsynet\"\n        });\n        console.warn(\"Klarte ikke hente data fra Arbeidstilsynet\", err);\n      });\n    }\n  }\n\n  function hentData() {\n    sokIEnhetsregisteret();\n    sokHosArbeidstilsynet();\n  }\n\n  return React.createElement(DispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(StateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form, {\n    action: \"#\",\n    onSubmit: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"S\\xF8k p\\xE5 organisasjonsnummer\"), React.createElement(\"input\", {\n    value: orgnr,\n    onChange: e => setOrgnr(e.currentTarget.value),\n    type: \"number\",\n    id: \"orgnr\",\n    \"aria-describedby\": \"orgnr-sok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: hentData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"S\\xF8k\")), React.createElement(OppsummeringEnhetsregister, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}\n\nexport default Sokpage;","map":{"version":3,"sources":["/Users/sindremoldeklev/Documents/kompetansesjekkeren/frontend/src/pages/sokpage.tsx"],"names":["React","useState","useReducer","reducer","initialState","OppsummeringEnhetsregister","Form","Button","ARBEIDSTILSYNET_HOST_AND_PORT","StateContext","createContext","DispatchContext","Sokpage","orgnr","setOrgnr","state","dispatch","sokIEnhetsregisteret","length","type","fetch","then","data","json","catch","err","error","console","warn","sokHosArbeidstilsynet","log","Organisation","hentData","e","preventDefault","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport { reducer } from \"../types/reducer\";\nimport { initialState, Appstate } from '../types/domain';\nimport OppsummeringEnhetsregister from '../components/oppsummering-enhetsregister';\nimport { Form, Button, Loader, Segment } from 'semantic-ui-react';\nimport { ENHETSREGISTERET_HOST_AND_PORT, ARBEIDSTILSYNET_HOST_AND_PORT } from '../konstanter';\n\nexport const StateContext = React.createContext<Appstate>(initialState);\nexport const DispatchContext = React.createContext({});\n\nfunction Sokpage() {\n    const [orgnr, setOrgnr] = useState<string>(\"\");\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    function sokIEnhetsregisteret() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`/enhetsregisteret?organisasjonsnummer=${orgnr}`)\n                .then(data => data.json())\n                .then(data => {\n                    dispatch({ type: \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\", data: data[\"_embedded\"] })\n                })\n                .catch(err => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra enhetsregisteret\" })\n                    console.warn(\"Klarte ikke hente data fra enhetsregisteret\", err);\n                })\n\n        }\n    }\n\n    function sokHosArbeidstilsynet() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${ARBEIDSTILSYNET_HOST_AND_PORT}?query=${orgnr}`)\n                .then(data => {\n                    console.log(\"Data\", data);\n                    return data.json();\n                })\n                .then(data => {\n                    console.log(data);\n                    dispatch({ type: \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\", data: data[0].Organisation });\n                })\n                .catch(err => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra Arbeidstilsynet\" });\n                    console.warn(\"Klarte ikke hente data fra Arbeidstilsynet\", err);\n                });\n        }\n    }\n\n    function hentData() {\n        sokIEnhetsregisteret();\n        sokHosArbeidstilsynet();\n    }\n\n\n    return (\n        <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                <Form action=\"#\" onSubmit={(e) => e.preventDefault()}>\n                    <Form.Field>\n                        <label>Søk på organisasjonsnummer</label>\n                        <input value={orgnr} onChange={(e) => setOrgnr(e.currentTarget.value)} type=\"number\" id=\"orgnr\" aria-describedby=\"orgnr-sok\" />\n\n                    </Form.Field>\n                    <Button onClick={hentData}>Søk</Button>\n                </Form>\n                <OppsummeringEnhetsregister />\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport default Sokpage;"]},"metadata":{},"sourceType":"module"}