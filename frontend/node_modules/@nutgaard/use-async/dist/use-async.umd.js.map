{"version":3,"file":"use-async.umd.js","sources":["../src/use-async.ts"],"sourcesContent":["import { DependencyList, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nexport enum Status {\n  INIT = 'INIT',\n  PENDING = 'PENDING',\n  OK = 'OK',\n  ERROR = 'ERROR',\n  RELOADING = 'RELOADING'\n}\n\nexport type WithoutData = { status: Status.INIT | Status.PENDING };\nexport type WithData<TYPE> = { status: Status.OK | Status.RELOADING; data: TYPE };\nexport type WithError = { status: Status.ERROR; error: any };\nexport type AsyncData<TYPE> = WithoutData | WithData<TYPE> | WithError;\n\nexport type AsyncResult<TYPE> = AsyncData<TYPE> & {\n  rerun(): void;\n};\n\nexport function isPending(result: AsyncData<any>): result is WithoutData {\n  return [Status.INIT, Status.PENDING].includes(result.status);\n}\n\nexport function hasData<TYPE>(result: AsyncData<TYPE>): result is WithData<TYPE> {\n  return [Status.OK, Status.RELOADING].includes(result.status);\n}\n\nexport function hasError(result: AsyncData<any>): result is WithError {\n  return result.status === Status.ERROR;\n}\n\nexport default function useAsync<TYPE>(\n  source: (isRerun: boolean) => Promise<TYPE>,\n  lazy: boolean = false,\n  dependencyList?: DependencyList,\n  initialState?: AsyncData<TYPE>\n): AsyncResult<TYPE> {\n  const isCancelled = useRef(false);\n  const [rerunValue, setRerunValue] = useState(0);\n  const lastRerun = useRef(rerunValue);\n  const [state, setState] = useState<AsyncData<TYPE>>(\n    initialState || {\n      status: lazy ? Status.INIT : Status.PENDING\n    }\n  );\n\n  useEffect(\n    () => {\n      const isRerun = lastRerun.current !== rerunValue;\n      lastRerun.current = rerunValue;\n\n      if (!lazy || (isRerun && ![Status.PENDING, Status.RELOADING].includes(state.status))) {\n        if (state.status === Status.OK) {\n          setState({ status: Status.RELOADING, data: state.data });\n        } else {\n          setState({ status: Status.PENDING });\n        }\n\n        source(isRerun).then(\n          (data) => {\n            if (!isCancelled.current) {\n              setState({ status: Status.OK, data });\n            }\n          },\n          (error) => {\n            console.error(error);\n            if (!isCancelled.current) {\n              setState({ status: Status.ERROR, error });\n            }\n          }\n        );\n      }\n      // Alle skal være med, men eslint greier ikke å analysere den\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },\n    dependencyList\n      ? [...dependencyList, rerunValue, lazy, isCancelled]\n      : [source, rerunValue, lazy, isCancelled]\n  );\n\n  useEffect(() => {\n    return () => {\n      isCancelled.current = true;\n    };\n  }, [isCancelled]);\n\n  const rerun = useCallback(() => {\n    setRerunValue((v) => v + 1);\n  }, []);\n\n  return useMemo(() => ({ ...state, rerun }), [state, rerun]);\n}\n"],"names":["Status","useRef","useEffect","useCallback","useMemo"],"mappings":"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"}