{"version":3,"sources":["components/oppsummering-enhetsregister.tsx","components/kort.tsx","components/enhetsregister-statuskort.tsx","konstanter.ts","types/domain.ts","types/reducer.ts","components/arbeidstilsynet-statuskort.tsx","components/sentralGodkjenning-statuskort.tsx","components/sokefelt/sokefelt.tsx","pages/sokpage.tsx","App.tsx","index.tsx"],"names":["OppsummeringEnhetsregister","state","useContext","StateContext","data","enhetsregisteret","enhet","Segment","Item","Content","Header","navn","organisasjonsnummer","Meta","organisasjonsform","beskrivelse","Description","naeringskode1","toLowerCase","registrertIMvaregisteret","registrertIForetaksregisteret","registrertIStiftelsesregisteret","registrertIFrivillighetsregisteret","underAvvikling","underTvangsavviklingEllerTvangsopplosning","sisteInnsendteAarsregnskap","antallAnsatte","forretningsadresse","adresse","postnummer","poststed","stiftelsesdato","Kort","props","color","erOkStatus","Message","tittel","children","EnhetsregisterStatuskort","orgnr","erMvaRegistrert","tekst","SOK","initialState","error","loading","submitted","arbeidstilsynet","sentralgodkjenning","reducer","action","type","assertNever","ArbeidstilsynetStatuskort","console","log","RecordStatus","Valid","Organisation","Name","Status","SentralGodkjenningStatuskort","status","approved","enterprise","name","href","approval_certificate","Sokefelt","useState","setOrgnr","feilmelding","setFeilmelding","Form","className","onSubmit","e","preventDefault","as","target","rel","negative","Field","placeholder","value","onChange","currentTarget","id","maxLength","aria-describedby","Button","primary","onClick","length","validerInput","createContext","DispatchContext","Sokpage","useReducer","dispatch","Provider","fetch","then","json","catch","err","Divider","Loader","active","role","aria-label","Grid","Column","width","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7186724.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Item, Segment } from \"semantic-ui-react\";\nimport { StateContext } from \"../pages/sokpage\";\nimport { Appstate } from \"../types/domain\";\n\nfunction OppsummeringEnhetsregister() {\n    const state = useContext<Appstate>(StateContext);\n\n    if (!state.data.enhetsregisteret) {\n        return null;\n    }\n\n    const enhet = state.data.enhetsregisteret;\n\n    return (\n        <Segment>\n            <Item>\n                <Item.Content>\n                    <Item.Header>{enhet.navn} - Orgnr: {enhet.organisasjonsnummer}</Item.Header>\n                    <Item.Meta>{enhet.organisasjonsform.beskrivelse}</Item.Meta>\n                    <Item.Description>\n                        <dl>\n                            <dt>Jobber med:</dt>\n                            <dd>{enhet.naeringskode1.beskrivelse.toLowerCase()}</dd>\n                            <dt>Registrert i MVA-registeret?</dt>\n                            <dd>{enhet.registrertIMvaregisteret ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Registrert i Foretaksregisteret</dt>\n                            <dd>{enhet.registrertIForetaksregisteret ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Registrert i Stiftelsesregisteret?</dt>\n                            <dd>{enhet.registrertIStiftelsesregisteret ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Registrert i Frivillighetsregisteret?</dt>\n                            <dd>{enhet.registrertIFrivillighetsregisteret ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Under avvikling?</dt>\n                            <dd>{enhet.underAvvikling ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Under tvangsavvikling eller tvangsoppløsning?</dt>\n                            <dd>{enhet.underTvangsavviklingEllerTvangsopplosning ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Siste innsendte årsregnskap</dt>\n                            <dd>{enhet.sisteInnsendteAarsregnskap}</dd>\n                            <dt>Antall ansatte:</dt>\n                            <dd>{enhet.antallAnsatte}</dd>\n                            <dt>Forretningsadresse</dt>\n                            <dd>{enhet.forretningsadresse.adresse[0]}, {enhet.forretningsadresse.postnummer} {enhet.forretningsadresse.poststed}</dd>\n                            <dt>Ble stiftet:</dt>\n                            <dd>{enhet.stiftelsesdato}</dd>\n                        </dl>\n                    </Item.Description>\n                </Item.Content>\n            </Item>\n        </Segment>\n    );\n}\n\nexport default OppsummeringEnhetsregister;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    tittel: string;\n    erOkStatus: boolean;\n    children?: JSX.Element[] | JSX.Element;\n    orgnr: string;\n}\n\nfunction Kort(props: Props) {\n\n    const color = props.erOkStatus ? \"green\" : \"red\";\n\n    if (!props.erOkStatus) {\n        return (\n            <Message color={color}>\n                <Message.Header>{props.tittel}</Message.Header>\n                {props.children}\n            </Message>\n        );\n    }\n\n    return (\n        <Message color={color}>\n            <Message.Header>{props.tittel}</Message.Header>\n            {props.children}\n        </Message>\n    );\n}\n\nexport default Kort;","import React, { useContext } from \"react\";\nimport { Loader, Message } from \"semantic-ui-react\";\nimport { StateContext } from \"../pages/sokpage\";\nimport { Appstate } from \"../types/domain\";\nimport Kort from \"./kort\";\n\nfunction EnhetsregisterStatuskort() {\n    const state = useContext<Appstate>(StateContext);\n\n    const { enhetsregisteret } = state.data;\n\n    if (!enhetsregisteret) {\n        return (\n            <Message color=\"red\">\n                <Message.Header>Enhetsregisteret</Message.Header>\n                <p>Fant ingen data for {state.orgnr} i Enhetsregisteret</p>\n            </Message>\n        );\n    }\n\n    const erMvaRegistrert = enhetsregisteret.registrertIMvaregisteret;\n    const tekst = erMvaRegistrert ? `${enhetsregisteret.navn} er registrert i MVA-registeret ✅` : `${enhetsregisteret.navn} er ikke registrert i MVA-registeret ❌`;\n    return (\n        <Kort\n            orgnr={state.orgnr} tittel=\"MVA-register\"\n            erOkStatus={erMvaRegistrert ? true : false}\n        >\n            <p>{tekst}</p>\n\n        </Kort>\n    );\n}\n\nexport default EnhetsregisterStatuskort;","export const SOK = \"/sok\";\n","\nexport interface Appstate {\n    error: string;\n    orgnr: string;\n    loading: boolean;\n    submitted: boolean;\n    data: Data;\n}\n\nexport const initialState: Appstate = {\n    error: \"\",\n    orgnr: \"\",\n    loading: false,\n    submitted: false,\n    data: {\n        enhetsregisteret: null,\n        arbeidstilsynet: null,\n        sentralgodkjenning: null\n    }\n};\n\nexport interface Data {\n    enhetsregisteret: EnhetsregisterEnhet | null;\n    arbeidstilsynet: ArbeidstilsynResult | null;\n    sentralgodkjenning: SentralGodkjenningResultat | null;\n}\n\nexport interface Sokeresultat {\n    organisasjonsnummer: string;\n    navn: string;\n    organisasjonsform: Organisasjonsform;\n    registreringsdatoEnhetsregisteret: string;\n    registrertIMvaregisteret: boolean;\n    naeringskode1: {\n        beskrivelse: string;\n        kode: string;\n    };\n    antallAnsatte: number;\n    forretningsadresse: Adresse;\n    stiftelsesdato: string;\n    institusjonellSektorkode: {\n        kode: string;\n        beskrivelse: string;\n    };\n    registrertIForetaksregisteret: boolean;\n    registrertIStiftelsesregisteret: boolean;\n    registrertIFrivillighetsregisteret: boolean;\n    sisteInnsendteAarsregnskap: string;\n    konkurs: boolean;\n    underAvvikling: boolean;\n    underTvangsavviklingEllerTvangsopplosning: boolean;\n    maalform: string;\n\n}\n\n\nexport interface EnhetsregisterEnhet {\n    organisasjonsnummer: string;\n    navn: string;\n    organisasjonsform: Organisasjonsform;\n    registreringsdatoEnhetsregisteret: string;\n    registrertIMvaregisteret: boolean;\n    naeringskode1: {\n        beskrivelse: string;\n        kode: string;\n    };\n    antallAnsatte: number;\n    forretningsadresse: Adresse;\n    stiftelsesdato: string;\n    institusjonellSektorkode: {\n        kode: string;\n        beskrivelse: string;\n    };\n    registrertIForetaksregisteret: boolean;\n    registrertIStiftelsesregisteret: boolean;\n    registrertIFrivillighetsregisteret: boolean;\n    sisteInnsendteAarsregnskap: string;\n    konkurs: boolean;\n    underAvvikling: boolean;\n    underTvangsavviklingEllerTvangsopplosning: boolean;\n    maalform: string;\n}\n\nexport interface Organisasjonsform {\n    kode: string;\n    beskrivelse: string;\n}\n\nexport interface Adresse {\n    land: string;\n    landkode: string;\n    postnummer: string;\n    poststed: string;\n    adresse: string[];\n    kommune: string;\n    kommunenummer: string;\n}\n\nexport interface ArbeidstilsynResult {\n    Organisation: ArbeidstilsynsOrganisasjon;\n    RecordStatus: ArbeidstilsynetRecordStatus;\n}\n\nexport interface ArbeidstilsynsOrganisasjon {\n    OrganisationNumber: string;\n    OrganisationForm: string;\n    Name: string;\n    Contact: ArbeidstilsynetContact;\n    PostalAdress: ArbeidstilsynetAdress;\n    BusinessAdress: ArbeidstilsynetAdress;\n    Status: string;\n    Link: string;\n}\n\nexport interface ArbeidstilsynetContact {\n    PhoneNumber: string;\n    MobileNumber: string;\n    WebAddress: string;\n}\n\nexport interface ArbeidstilsynetAdress {\n    Street: string;\n    PostalCode: string;\n    City: string;\n    Municipal: {\n        Name: string;\n        Number: string;\n    };\n    County: {\n        Name: string;\n        Number: string;\n    };\n    Country: {\n        Name: string;\n        Number: string;\n    };\n}\n\nexport interface ArbeidstilsynetRecordStatus {\n    Id: {\n        ExternalId: string;\n        StoreId: string;\n    };\n    OriginalStatus: string;\n    Status: string;\n    Description: string;\n    OrganisationType: number;\n    Valid: boolean;\n}\n\nexport interface SentralGodkjenningResultat {\n    status: {\n        approved: boolean;\n        approval_period_to: string;\n        approval_certificate: string;\n    };\n    enterprise: {\n        organizational_number: string;\n        name: string;\n        www: string | null;\n        email: string | null;\n        phone: string | null;\n    };\n}\n","import assertNever from \"assert-never\";\nimport { EnhetsregisterActions } from \"./actions\";\nimport { Appstate, initialState } from \"./domain\";\n\nexport function reducer(state: Appstate, action: EnhetsregisterActions): Appstate {\n    switch (action.type) {\n        case \"DATA/HENTER_DATA\":\n            return {\n                ...state,\n                loading: true\n            };\n        case \"DATA/SUBMITTED_FORM\":\n            return {\n                ...state,\n                submitted: true,\n                loading: true,\n                error: \"\"\n            };\n        case \"DATA/HENTET_DATA_OK\": {\n            return {\n                ...state,\n                data: action.data,\n                submitted: true,\n                loading: false,\n                error: \"\"\n            };\n        }\n        case \"DATA/HENTING_AV_DATA_ERROR\": {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n                submitted: true\n            };\n        }\n        case \"SOK/RESET\": {\n            return initialState;\n        }\n        default: {\n            assertNever(action);\n            return state;\n        }\n    }\n}\n","import React, { useContext } from 'react';\nimport { StateContext } from '../pages/sokpage';\nimport { Appstate } from '../types/domain';\nimport { Message } from 'semantic-ui-react';\nimport Kort from './kort';\n\nfunction ArbeidstilsynetStatuskort() {\n    const state = useContext<Appstate>(StateContext);\n    const { arbeidstilsynet } = state.data;\n    console.log(state.data);\n\n    if (!arbeidstilsynet) {\n        return (\n            <Message color=\"red\">\n                <Message.Header>Arbeidstilsynet</Message.Header>\n                <p>Fant ingen data for {state.orgnr} hos Arbeidstilsynet.</p>\n            </Message>\n        );\n    }\n\n    const tekst = arbeidstilsynet.RecordStatus.Valid ? `${arbeidstilsynet.Organisation.Name} har status: ${arbeidstilsynet.RecordStatus.Status} - ${arbeidstilsynet.RecordStatus.Description}` : `${arbeidstilsynet.Organisation.Name} er ikke godkjent i renholdsregisteret.`;\n\n    return (\n        <Kort\n            tittel=\"Renholdsregisteret\"\n            erOkStatus={arbeidstilsynet.RecordStatus.Valid}\n            orgnr={state.orgnr}\n        >\n            <p>{tekst}</p>\n        </Kort>\n    )\n\n}\n\nexport default ArbeidstilsynetStatuskort;","import React, { useContext } from 'react';\nimport { Appstate } from '../types/domain';\nimport { StateContext } from '../pages/sokpage';\nimport { Message } from 'semantic-ui-react';\nimport Kort from './kort';\n\n\nfunction SentralGodkjenningStatuskort() {\n    const state = useContext<Appstate>(StateContext);\n    const { sentralgodkjenning } = state.data;\n\n    if (!sentralgodkjenning) {\n        return (\n            <Message color=\"red\">\n                <Message.Header>Sentral godkjenning</Message.Header>\n                <p>Fant ingen data for {state.orgnr} hos Sentral godkjenning.</p>\n            </Message>\n        );\n    }\n\n    const tekst = sentralgodkjenning.status.approved ? `${sentralgodkjenning.enterprise.name} finnes i Sentral godkjenning ✅` : `${sentralgodkjenning.enterprise.name} er ikke sentralt godkjent ❌.`;\n    return (\n        <Kort\n            tittel=\"Sentral godkjenning\"\n            erOkStatus={sentralgodkjenning.status.approved}\n            orgnr={state.orgnr}\n        >\n            <p>{tekst}</p>\n            <p><a href={sentralgodkjenning.status.approval_certificate}>Lenke til sertifikat</a></p>\n        </Kort>\n    )\n}\n\nexport default SentralGodkjenningStatuskort;","import React, { useState } from 'react';\nimport { Form, Header, Button, Message } from 'semantic-ui-react';\n\ninterface Props {\n    onSubmit: (orgnr: string) => void;\n}\n\nfunction Sokefelt(props: Props) {\n    const [orgnr, setOrgnr] = useState(\"\");\n    const [feilmelding, setFeilmelding] = useState(\"\");\n\n    function validerInput(orgnr: string) {\n        if (orgnr.length > 0 && orgnr.length < 9) {\n            setFeilmelding(\"Organisasjonsnummer må være 9 siffer\");\n        } else {\n            setFeilmelding(\"\");\n            props.onSubmit(orgnr);\n        }\n    }\n\n    return (\n        <Form className=\"sokeform\" action=\"#\" onSubmit={(e) => e.preventDefault()}>\n            <Header as=\"h1\">Kompetansesjekk</Header>\n            <p>Sjekk organisasjon opp mot <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.brreg.no/\">Brønnøysundregisteret (Enhetsregisteret)</a>, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://sgregister.dibk.no/\">Sentral godkjenning</a> og Arbeidstilsynet sitt <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.arbeidstilsynet.no/registre/renholdsregisteret/sok/\">renholdsregister</a>.</p>\n            {feilmelding && <Message negative>{feilmelding}</Message>}\n            <Form.Field>\n                <label>Søk på organisasjonsnummer</label>\n                <input placeholder=\"Organisasjonsnummer - 9 siffer\" value={orgnr} onChange={(e) => setOrgnr(e.currentTarget.value)} type=\"text\" id=\"orgnr\" maxLength={9} aria-describedby=\"orgnr-sok\" />\n            </Form.Field>\n            <Button primary className=\"cta-btn\" onClick={() => validerInput(orgnr)}>Søk</Button>\n        </Form>\n    )\n}\n\nexport default Sokefelt;","import React, { useReducer, Context, createContext, Dispatch } from \"react\";\nimport { Button, Divider, Form, Grid, Header, Message, Loader } from \"semantic-ui-react\";\nimport OppsummeringEnhetsregister from \"../components/oppsummering-enhetsregister\";\nimport EnhetsregisterStatuskort from \"../components/enhetsregister-statuskort\";\nimport { SOK } from \"../konstanter\";\nimport { Appstate, initialState } from \"../types/domain\";\nimport { reducer } from \"../types/reducer\";\nimport ArbeidstilsynetStatuskort from \"../components/arbeidstilsynet-statuskort\";\nimport SentralGodkjenningStatuskort from \"../components/sentralGodkjenning-statuskort\";\nimport { EnhetsregisterActions } from \"../types/actions\";\nimport Sokefelt from \"../components/sokefelt/sokefelt\";\nimport \"./sokpage.scss\";\n\nexport const StateContext = createContext<Appstate>(initialState);\nexport const DispatchContext: Context<Dispatch<EnhetsregisterActions>> = createContext({} as any);\n\nfunction Sokpage() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    function sok(orgnr: string) {\n\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${SOK}?organisasjonsnummer=${orgnr}`)\n                .then((data) => {\n                    return data.json();\n                })\n                .then((data) => {\n                    if (data) {\n                        dispatch({ type: \"DATA/HENTET_DATA_OK\", data })\n                    }\n                })\n                .catch((err) => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: `Klarte ikke hente data om orgnr: ${orgnr}. Prøv igjen senere.` });\n                });\n        } else {\n            dispatch({ type: \"SOK/RESET\" });\n        }\n    }\n\n    return (\n        <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                <div className=\"sokeside\">\n                    <Sokefelt onSubmit={sok} />\n                </div>\n                <Divider />\n\n                {state.loading && <Loader active={state.loading} />}\n                {state.error && <Message color=\"red\"><Message.Header>Oisann <span role=\"img\" aria-label=\"Oisann-ikon\">🙈</span></Message.Header>{state.error}</Message>}\n                {state.data.enhetsregisteret && <Header as=\"h3\">Du har søkt på {state.data.enhetsregisteret.navn} med orgnr: {state.data.enhetsregisteret.organisasjonsnummer}</Header>}\n                <Grid>\n                    <Grid.Column width={10}>\n                        {state.submitted && <EnhetsregisterStatuskort />}\n                        {state.submitted && <ArbeidstilsynetStatuskort />}\n                        {state.submitted && <SentralGodkjenningStatuskort />}\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        <OppsummeringEnhetsregister />\n                    </Grid.Column>\n                </Grid>\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport default Sokpage;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./App.scss\";\nimport Sokpage from \"./pages/sokpage\";\n\nconst App: React.FC = () => {\n  return (\n    <Container>\n      <Sokpage />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}