{"version":3,"sources":["components/oppsummering-enhetsregister.tsx","components/kort.tsx","components/enhetsregister-statuskort.tsx","konstanter.ts","types/domain.ts","types/reducer.ts","components/arbeidstilsynet-statuskort.tsx","components/sentralGodkjenning-statuskort.tsx","pages/sokpage.tsx","App.tsx","index.tsx"],"names":["OppsummeringEnhetsregister","state","useContext","StateContext","loading","Loader","active","enhetsregisterResult","enhet","Segment","Item","Content","Header","navn","organisasjonsnummer","Meta","organisasjonsform","beskrivelse","Description","registrertIMvaregisteret","naeringskode1","toLowerCase","antallAnsatte","forretningsadresse","adresse","postnummer","poststed","stiftelsesdato","Kort","props","color","erOkStatus","Message","tittel","children","EnhetsregisterStatuskort","orgnr","erMvaRegistrert","tekst","ARBEIDSTILSYNET_HOST_AND_PORT","SENTRAL_GODKJENNING_HOST_AND_PORT","ENHETSREGISTERET_HOST_AND_PORT","initialState","error","submitted","arbeidstilsynResult","sentralGodkjenningResultat","reducer","action","type","data","assertNever","ArbeidstilsynetStatuskort","RecordStatus","Valid","Organisation","Name","Status","SentralGodkjenningStatuskort","status","approved","enterprise","name","href","approval_certificate","React","createContext","DispatchContext","Sokpage","useState","setOrgnr","useReducer","dispatch","Provider","value","Form","onSubmit","e","preventDefault","Field","width","onChange","currentTarget","id","aria-describedby","Button","className","onClick","length","fetch","then","json","parsed","JSON","parse","_embedded","enheter","catch","err","console","warn","Divider","as","Grid","Column","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6814c086.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Item, Loader, Segment } from \"semantic-ui-react\";\nimport { StateContext } from \"../pages/sokpage\";\nimport { Appstate } from \"../types/domain\";\n\nfunction OppsummeringEnhetsregister() {\n    const state = useContext<Appstate>(StateContext);\n\n    if (state.loading) {\n        return <Loader active={state.loading} />;\n    }\n\n    if (!state.enhetsregisterResult) {\n        return null;\n    }\n\n    const enhet = state.enhetsregisterResult;\n\n    return (\n        <Segment>\n            <Item>\n                <Item.Content>\n                    <Item.Header>{enhet.navn} - Orgnr: {enhet.organisasjonsnummer}</Item.Header>\n                    <Item.Meta>{enhet.organisasjonsform.beskrivelse}</Item.Meta>\n                    <Item.Description>\n                        <dl>\n                            <dt>Registrert i MVA-registeret?</dt>\n                            <dd>{enhet.registrertIMvaregisteret ? \"Ja ✅\" : \"Nei ❌\"}</dd>\n                            <dt>Jobber med:</dt>\n                            <dd>{enhet.naeringskode1.beskrivelse.toLowerCase()}</dd>\n                            <dt>Antall ansatte:</dt>\n                            <dd>{enhet.antallAnsatte}</dd>\n                            <dt>Forretningsadresse</dt>\n                            <dd>{enhet.forretningsadresse.adresse[0]}, {enhet.forretningsadresse.postnummer} {enhet.forretningsadresse.poststed}</dd>\n                            <dt>Ble stiftet:</dt>\n                            <dd>{enhet.stiftelsesdato}</dd>\n                        </dl>\n                    </Item.Description>\n                </Item.Content>\n            </Item>\n        </Segment>\n    );\n}\n\nexport default OppsummeringEnhetsregister;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    tittel: string;\n    erOkStatus: boolean;\n    children?: JSX.Element[] | JSX.Element;\n    orgnr: string;\n}\n\nfunction Kort(props: Props) {\n\n    const color = props.erOkStatus ? \"green\" : \"red\";\n\n    if (!props.erOkStatus) {\n        return (\n            <Message color={color}>\n                <Message.Header>{props.tittel}</Message.Header>\n                {props.children}\n            </Message>\n        );\n    }\n\n    return (\n        <Message color={color}>\n            <Message.Header>{props.tittel}</Message.Header>\n            {props.children}\n        </Message>\n    );\n}\n\nexport default Kort;","import React, { useContext } from \"react\";\nimport { Grid, Header, Loader, Message } from \"semantic-ui-react\";\nimport { StateContext } from \"../pages/sokpage\";\nimport { Appstate } from \"../types/domain\";\nimport Kort from \"./kort\";\n\ninterface Props {\n    orgnr: string;\n}\n\nfunction EnhetsregisterStatuskort(props: Props) {\n    const state = useContext<Appstate>(StateContext);\n\n    if (state.loading) {\n        return <Loader active={state.loading} />;\n    }\n\n    const { enhetsregisterResult } = state;\n\n    if (!enhetsregisterResult) {\n        return (\n            <Message color=\"grey\">\n                <Message.Header>Enhetsregisteret</Message.Header>\n                <p>Fant ingen data for {props.orgnr} i Enhetsregisteret</p>\n            </Message>\n        );\n    }\n\n    const erMvaRegistrert = enhetsregisterResult.registrertIMvaregisteret;\n    const tekst = erMvaRegistrert ? `${enhetsregisterResult.navn} er registrert i MVA-registeret ✅` : `${enhetsregisterResult.navn} er ikke registrert i MVA-registeret ❌`;\n    return (\n        <Kort\n            orgnr={props.orgnr} tittel=\"MVA-register\"\n            erOkStatus={erMvaRegistrert ? true : false}\n        >\n            <p>{tekst}</p>\n\n        </Kort>\n    );\n}\n\nexport default EnhetsregisterStatuskort;\n","export const ARBEIDSTILSYNET_HOST_AND_PORT = \"/arbeidstilsynet\";\nexport const SENTRAL_GODKJENNING_HOST_AND_PORT = \"/sentralgodkjenning\";\nexport const ENHETSREGISTERET_HOST_AND_PORT = \"/enhetsregisteret\";\n","import { Organisasjonsform } from \"./domain\";\nexport interface Appstate {\n    error: string;\n    loading: boolean;\n    submitted: boolean;\n    enhetsregisterResult: EnhetsregisterEnhet | null;\n    arbeidstilsynResult: ArbeidstilsynResult | null;\n    sentralGodkjenningResultat: SentralGodkjenningResultat | null;\n}\n\nexport interface Sokeresultat {\n    organisasjonsnummer: string;\n    navn: string;\n    organisasjonsform: Organisasjonsform;\n    registreringsdatoEnhetsregisteret: string;\n    registrertIMvaregisteret: boolean;\n    naeringskode1: {\n        beskrivelse: string;\n        kode: string;\n    };\n    antallAnsatte: number;\n    forretningsadresse: Adresse;\n    stiftelsesdato: string;\n    institusjonellSektorkode: {\n        kode: string;\n        beskrivelse: string;\n    };\n    registrertIForetaksregisteret: boolean;\n    registrertIStiftelsesregisteret: boolean;\n    registrertIFrivillighetsregisteret: boolean;\n    sisteInnsendteAarsregnskap: string;\n    konkurs: boolean;\n    underAvvikling: boolean;\n    underTvangsavviklingEllerTvangsopplosning: boolean;\n    maalform: string;\n\n}\n\nexport const initialState: Appstate = {\n    error: \"\",\n    loading: false,\n    submitted: false,\n    enhetsregisterResult: null,\n    arbeidstilsynResult: null,\n    sentralGodkjenningResultat: null\n};\n\nexport interface EnhetsregisterEnhet {\n    organisasjonsnummer: string;\n    navn: string;\n    organisasjonsform: Organisasjonsform;\n    registreringsdatoEnhetsregisteret: string;\n    registrertIMvaregisteret: boolean;\n    naeringskode1: {\n        beskrivelse: string;\n        kode: string;\n    };\n    antallAnsatte: number;\n    forretningsadresse: Adresse;\n    stiftelsesdato: string;\n    institusjonellSektorkode: {\n        kode: string;\n        beskrivelse: string;\n    };\n    registrertIForetaksregisteret: boolean;\n    registrertIStiftelsesregisteret: boolean;\n    registrertIFrivillighetsregisteret: boolean;\n    sisteInnsendteAarsregnskap: string;\n    konkurs: boolean;\n    underAvvikling: boolean;\n    underTvangsavviklingEllerTvangsopplosning: boolean;\n    maalform: string;\n}\n\nexport interface Organisasjonsform {\n    kode: string;\n    beskrivelse: string;\n}\n\nexport interface Adresse {\n    land: string;\n    landkode: string;\n    postnummer: string;\n    poststed: string;\n    adresse: string[];\n    kommune: string;\n    kommunenummer: string;\n}\n\nexport interface ArbeidstilsynResult {\n    Organisation: ArbeidstilsynsOrganisasjon;\n    RecordStatus: ArbeidstilsynetRecordStatus;\n}\n\nexport interface ArbeidstilsynsOrganisasjon {\n    OrganisationNumber: string;\n    OrganisationForm: string;\n    Name: string;\n    Contact: ArbeidstilsynetContact;\n    PostalAdress: ArbeidstilsynetAdress;\n    BusinessAdress: ArbeidstilsynetAdress;\n    Status: string;\n    Link: string;\n}\n\nexport interface ArbeidstilsynetContact {\n    PhoneNumber: string;\n    MobileNumber: string;\n    WebAddress: string;\n}\n\nexport interface ArbeidstilsynetAdress {\n    Street: string;\n    PostalCode: string;\n    City: string;\n    Municipal: {\n        Name: string;\n        Number: string;\n    };\n    County: {\n        Name: string;\n        Number: string;\n    };\n    Country: {\n        Name: string;\n        Number: string;\n    };\n}\n\nexport interface ArbeidstilsynetRecordStatus {\n    Id: {\n        ExternalId: string;\n        StoreId: string;\n    };\n    OriginalStatus: string;\n    Status: string;\n    Description: string;\n    OrganisationType: number;\n    Valid: boolean;\n}\n\nexport interface SentralGodkjenningResultat {\n    status: {\n        approved: boolean;\n        approval_period_to: string;\n        approval_certificate: string;\n    };\n    enterprise: {\n        organizational_number: string;\n        name: string;\n        www: string | null;\n        email: string | null;\n        phone: string | null;\n    };\n}\n","import assertNever from \"assert-never\";\nimport { EnhetsregisterActions } from \"./actions\";\nimport { Appstate } from \"./domain\";\n\nexport function reducer(state: Appstate, action: EnhetsregisterActions): Appstate {\n    switch (action.type) {\n        case \"DATA/HENTER_DATA\":\n            return {\n                ...state,\n                loading: true\n            };\n        case \"DATA/SUBMITTED_FORM\":\n            return {\n                ...state,\n                submitted: true,\n                loading: true,\n                error: \"\"\n            };\n        case \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\":\n            return {\n                ...state,\n                enhetsregisterResult: action.data,\n                submitted: true,\n                loading: false,\n                error: \"\",\n            };\n        case \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\": {\n            return {\n                ...state,\n                arbeidstilsynResult: action.data,\n                submitted: true,\n                loading: false,\n                error: \"\"\n            };\n        }\n        case \"SENTRAL_GODKJENNING/HENTET_FRA_SENTRAL_GODKJENNING_OK\": {\n            return {\n                ...state,\n                sentralGodkjenningResultat: action.data,\n                submitted: true,\n                loading: false,\n                error: \"\"\n            };\n        }\n        case \"DATA/HENTING_AV_DATA_ERROR\": {\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            };\n        }\n        default: {\n            assertNever(action);\n            return state;\n        }\n    }\n}\n","import React, { useContext } from 'react';\nimport { StateContext } from '../pages/sokpage';\nimport { Appstate } from '../types/domain';\nimport { Message } from 'semantic-ui-react';\nimport Kort from './kort';\n\ninterface Props {\n    orgnr: string;\n}\n\nfunction ArbeidstilsynetStatuskort(props: Props) {\n    const state = useContext<Appstate>(StateContext);\n    const { arbeidstilsynResult } = state;\n\n    if (!arbeidstilsynResult) {\n        return (\n            <Message color=\"grey\">\n                <Message.Header>Arbeidstilsynet</Message.Header>\n                <p>Fant ingen data for {props.orgnr} hos Arbeidstilsynet.</p>\n            </Message>\n        );\n    }\n\n    const tekst = arbeidstilsynResult.RecordStatus.Valid ? `${arbeidstilsynResult.Organisation.Name} har status: ${arbeidstilsynResult.RecordStatus.Status} - ${arbeidstilsynResult.RecordStatus.Description}` : `${arbeidstilsynResult.Organisation.Name} er ikke godkjent i renholdsregisteret.`;\n\n    return (\n        <Kort\n            tittel=\"Renholdsregisteret\"\n            erOkStatus={arbeidstilsynResult.RecordStatus.Valid}\n            orgnr={props.orgnr}\n        >\n            <p>{tekst}</p>\n        </Kort>\n    )\n\n}\n\nexport default ArbeidstilsynetStatuskort;","import React, { useContext } from 'react';\nimport { Appstate } from '../types/domain';\nimport { StateContext } from '../pages/sokpage';\nimport { Message } from 'semantic-ui-react';\nimport Kort from './kort';\n\ninterface Props {\n    orgnr: string;\n}\n\nfunction SentralGodkjenningStatuskort(props: Props) {\n    const state = useContext<Appstate>(StateContext);\n    const { sentralGodkjenningResultat } = state;\n\n    if (!sentralGodkjenningResultat) {\n        return (\n            <Message color=\"grey\">\n                <Message.Header>Sentral godkjenning</Message.Header>\n                <p>Fant ingen data for {props.orgnr} hos Sentral godkjenning.</p>\n            </Message>\n        );\n    }\n\n    const tekst = sentralGodkjenningResultat.status.approved ? `${sentralGodkjenningResultat.enterprise.name} finnes i Sentral godkjenning ✅` : `${sentralGodkjenningResultat.enterprise.name} er ikke sentralt godkjent ❌.`;\n    return (\n        <Kort\n            tittel=\"Sentral godkjenning\"\n            erOkStatus={sentralGodkjenningResultat.status.approved}\n            orgnr={props.orgnr}\n        >\n            <p>{tekst}</p>\n            <p><a href={sentralGodkjenningResultat.status.approval_certificate}>Lenke til sertifikat</a></p>\n        </Kort>\n    )\n}\n\nexport default SentralGodkjenningStatuskort;","import React, { useReducer, useState } from \"react\";\nimport { Button, Divider, Form, Grid, Header, Message } from \"semantic-ui-react\";\nimport OppsummeringEnhetsregister from \"../components/oppsummering-enhetsregister\";\nimport EnhetsregisterStatuskort from \"../components/enhetsregister-statuskort\";\nimport { ARBEIDSTILSYNET_HOST_AND_PORT, ENHETSREGISTERET_HOST_AND_PORT, SENTRAL_GODKJENNING_HOST_AND_PORT } from \"../konstanter\";\nimport { Appstate, initialState } from \"../types/domain\";\nimport { reducer } from \"../types/reducer\";\nimport ArbeidstilsynetStatuskort from \"../components/arbeidstilsynet-statuskort\";\nimport SentralGodkjenningStatuskort from \"../components/sentralGodkjenning-statuskort\";\n\nexport const StateContext = React.createContext<Appstate>(initialState);\nexport const DispatchContext = React.createContext({});\n\nfunction Sokpage() {\n    const [orgnr, setOrgnr] = useState<string>(\"\");\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    function sokIEnhetsregisteret() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${ENHETSREGISTERET_HOST_AND_PORT}?organisasjonsnummer=${orgnr}`)\n                .then((data) => data.json())\n                .then((data) => {\n                    const parsed = JSON.parse(data);\n                    dispatch({ type: \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\", data: parsed._embedded.enheter.length > 0 ? parsed._embedded.enheter[0] : null });\n                })\n                .catch((err) => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra enhetsregisteret\" });\n                    console.warn(\"Klarte ikke hente data fra enhetsregisteret\", err);\n                });\n        }\n    }\n\n    function sokHosArbeidstilsynet() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${ARBEIDSTILSYNET_HOST_AND_PORT}?organisasjonsnummer=${orgnr}`)\n                .then((data) => {\n                    return data.json();\n                })\n                .then((data) => {\n                    const parsed = JSON.parse(data);\n                    dispatch({ type: \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\", data: parsed.length > 0 ? parsed[0] : null });\n                })\n                .catch((err) => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra Arbeidstilsynet\" });\n                    console.warn(\"Klarte ikke hente data fra Arbeidstilsynet\", err);\n                });\n        }\n    }\n\n    function sokHosSentralGodkjenning() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${SENTRAL_GODKJENNING_HOST_AND_PORT}?organisasjonsnummer=${orgnr}`)\n                .then((data) => {\n                    return data.json();\n                })\n                .then((data) => {\n                    if (data) {\n                        const parsed = JSON.parse(data);\n                        dispatch({ type: \"SENTRAL_GODKJENNING/HENTET_FRA_SENTRAL_GODKJENNING_OK\", data: parsed[\"dibk-sgdata\"] });\n                    }\n                })\n                .catch((err) => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra Sentral godkjenning\" });\n                    console.warn(\"Klarte ikke hente data fra Sentral godkjenning\", err);\n                });\n        }\n    }\n\n    function hentData() {\n        sokIEnhetsregisteret();\n        sokHosArbeidstilsynet();\n        sokHosSentralGodkjenning();\n    }\n\n    return (\n        <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                <Form action=\"#\" onSubmit={(e) => e.preventDefault()}>\n                    <Form.Field width={4}>\n                        <label>Søk på organisasjonsnummer</label>\n                        <input value={orgnr} onChange={(e) => setOrgnr(e.currentTarget.value)} type=\"number\" id=\"orgnr\" aria-describedby=\"orgnr-sok\" />\n\n                    </Form.Field>\n                    <Button className=\"cta-btn\" onClick={hentData}>Søk</Button>\n                </Form>\n                <Divider />\n                {state.error && <Message color=\"red\"><Message.Header>Feil</Message.Header>{state.error}</Message>}\n\n                {state.enhetsregisterResult && <Header as=\"h3\">Du har søkt på {state.enhetsregisterResult.navn} med orgnr: {state.enhetsregisterResult.organisasjonsnummer}</Header>}\n                <Grid>\n                    <Grid.Column width={10}>\n                        {state.submitted && <EnhetsregisterStatuskort orgnr={orgnr} />}\n                        {state.submitted && <ArbeidstilsynetStatuskort orgnr={orgnr} />}\n                        {state.submitted && <SentralGodkjenningStatuskort orgnr={orgnr} />}\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        <OppsummeringEnhetsregister />\n                    </Grid.Column>\n                </Grid>\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport default Sokpage;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./App.scss\";\nimport Sokpage from \"./pages/sokpage\";\n\nconst App: React.FC = () => {\n  return (\n    <Container>\n      <Sokpage />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}