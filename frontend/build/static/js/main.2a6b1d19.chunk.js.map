{"version":3,"sources":["types/reducer.ts","types/domain.ts","components/oppsummering-enhetsregister.tsx","konstanter.ts","pages/sokpage.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","loading","enhetsregisterResult","data","error","arbeidstilsynetOrganisation","assertNever","initialState","OppsummeringEnhetsregister","useContext","StateContext","Loader","active","enhet","enheter","Item","Content","Header","navn","organisasjonsform","beskrivelse","Meta","naeringskode1","toLowerCase","Extra","stiftelsesdato","ARBEIDSTILSYNET_HOST_AND_PORT","ENHETSREGISTERET_HOST_AND_PORT","React","createContext","DispatchContext","Sokpage","useState","orgnr","setOrgnr","useReducer","dispatch","Provider","value","Form","onSubmit","e","preventDefault","Field","onChange","currentTarget","id","aria-describedby","Button","onClick","length","fetch","then","json","catch","err","console","warn","log","Organisation","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a6b1d19.chunk.js","sourcesContent":["import { Appstate } from './domain';\nimport { EnhetsregisterActions } from './actions';\nimport assertNever from \"assert-never\";\n\nexport function reducer(state: Appstate, action: EnhetsregisterActions): Appstate {\n    switch (action.type) {\n        case \"DATA/HENTER_DATA\":\n            return {\n                ...state,\n                loading: true\n            }\n        case \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\":\n            return {\n                ...state,\n                enhetsregisterResult: action.data,\n                loading: false,\n                error: \"\",\n            }\n        case \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\": {\n            return {\n                ...state,\n                arbeidstilsynetOrganisation: action.data,\n                loading: false,\n                error: \"\"\n            }\n        }\n        case \"DATA/HENTING_AV_DATA_ERROR\": {\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        }\n        default: {\n            assertNever(action);\n            return state;\n        }\n    }\n}","import { Organisasjonsform } from './domain';\nexport interface Appstate {\n    error: string;\n    loading: boolean;\n    enhetsregisterResult: EnhetsregisterEnheter | null;\n    arbeidstilsynetOrganisation: ArbeidstilsynsOrganisasjon | null;\n}\n\nexport const initialState: Appstate = {\n    error: \"\",\n    loading: false,\n    enhetsregisterResult: null,\n    arbeidstilsynetOrganisation: null\n}\n\nexport interface EnhetsregisterEnheter {\n    enheter: Array<EnhetsregisterEnhet>;\n}\n\nexport interface EnhetsregisterEnhet {\n    organisasjonsnummer: string;\n    navn: string;\n    organisasjonsform: Organisasjonsform;\n    registreringsdatoEnhetsregisteret: string;\n    registrertIMvaregisteret: boolean;\n    naeringskode1: {\n        beskrivelse: string;\n        kode: string;\n    }\n    antallAnsatte: number;\n    forretningsadresse: Adresse;\n    stiftelsesdato: string;\n    institusjonellSektorkode: {\n        kode: string;\n        beskrivelse: string;\n    }\n    registrertIForetaksregisteret: boolean;\n    registrertIStiftelsesregisteret: boolean;\n    registrertIFrivillighetsregisteret: boolean;\n    sisteInnsendteAarsregnskap: string;\n    konkurs: boolean;\n    underAvvikling: boolean;\n    underTvangsavviklingEllerTvangsopplosning: boolean;\n    maalform: string;\n}\n\nexport interface Organisasjonsform {\n    kode: string;\n    beskrivelse: string;\n}\n\nexport interface Adresse {\n    land: string;\n    landkode: string;\n    postnummer: string;\n    poststed: string;\n    adresse: Array<string>;\n    kommune: string;\n    kommunenummer: string;\n}\n\nexport interface ArbeidstilsynsOrganisasjon {\n    OrganisationNumber: string;\n    OrganisationForm: string;\n    Name: string;\n    Contact: ArbeidstilsynetContact;\n    PostalAdress: ArbeidstilsynetAdress;\n    BusinessAdress: ArbeidstilsynetAdress;\n    Status: string;\n    RecordStatus: ArbeidstilsynetRecordStatus;\n    Link: string;\n}\n\nexport interface ArbeidstilsynetContact {\n    PhoneNumber: string;\n    MobileNumber: string;\n    WebAddress: string;\n}\n\nexport interface ArbeidstilsynetAdress {\n    Street: string;\n    PostalCode: string;\n    City: string;\n    Municipal: {\n        Name: string;\n        Number: string;\n    };\n    County: {\n        Name: string;\n        Number: string;\n    };\n    Country: {\n        Name: string;\n        Number: string;\n    };\n}\n\nexport interface ArbeidstilsynetRecordStatus {\n    Id: {\n        ExternalId: string;\n        StoreId: string;\n    };\n    OriginalStatus: string;\n    Status: string;\n    Description: string;\n    OrganisationType: number;\n    Valid: boolean;\n}","import React, { useContext, useState } from 'react';\nimport { StateContext } from '../pages/sokpage';\nimport { Appstate } from '../types/domain';\nimport { Loader, Item } from 'semantic-ui-react';\n\nfunction OppsummeringEnhetsregister() {\n    const state = useContext<Appstate>(StateContext);\n\n    if (state.loading) {\n        return <Loader active={state.loading} />\n    }\n\n    if (!state.enhetsregisterResult) {\n        return null;\n    }\n\n    const [enhet] = state.enhetsregisterResult.enheter;\n\n\n    return (\n        <Item>\n            <Item.Content>\n                <Item.Header>{enhet.navn} - {enhet.organisasjonsform.beskrivelse}</Item.Header>\n                <Item.Meta>Jobber med {enhet.naeringskode1.beskrivelse.toLowerCase()}</Item.Meta>\n                <Item.Extra>Ble stiftet {enhet.stiftelsesdato}</Item.Extra>\n            </Item.Content>\n        </Item>\n    )\n}\n\nexport default OppsummeringEnhetsregister;","export const ARBEIDSTILSYNET_HOST_AND_PORT = 'https://www.arbeidstilsynet.no/registre/renholdsregisteret/sok/GetRecordSearchModel';\nexport const SENTRAL_GODKJENNING_HOST_AND_PORT = 'https://sgregister.dibk.no/api/enterprises/';\nexport const ENHETSREGISTERET_HOST_AND_PORT = 'https://data.brreg.no/enhetsregisteret/api/enheter';","import React, { useState, useReducer } from 'react';\nimport { reducer } from \"../types/reducer\";\nimport { initialState, Appstate } from '../types/domain';\nimport OppsummeringEnhetsregister from '../components/oppsummering-enhetsregister';\nimport { Form, Button, Loader, Segment } from 'semantic-ui-react';\nimport { ENHETSREGISTERET_HOST_AND_PORT, ARBEIDSTILSYNET_HOST_AND_PORT } from '../konstanter';\n\nexport const StateContext = React.createContext<Appstate>(initialState);\nexport const DispatchContext = React.createContext({});\n\nfunction Sokpage() {\n    const [orgnr, setOrgnr] = useState<string>(\"\");\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    function sokIEnhetsregisteret() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${ENHETSREGISTERET_HOST_AND_PORT}?organisasjonsnummer=${orgnr}`)\n                .then(data => data.json())\n                .then(data => {\n                    dispatch({ type: \"ENHETSREGISTER/HENTET_FRA_ENHETSREGISTER_OK\", data: data[\"_embedded\"] })\n                })\n                .catch(err => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra enhetsregisteret\" })\n                    console.warn(\"Klarte ikke hente data fra enhetsregisteret\", err);\n                })\n\n        }\n    }\n\n    function sokHosArbeidstilsynet() {\n        if (orgnr.length === 9) {\n            dispatch({ type: \"DATA/HENTER_DATA\" });\n            fetch(`${ARBEIDSTILSYNET_HOST_AND_PORT}?query=${orgnr}`)\n                .then(data => {\n                    console.log(\"Data\", data);\n                    return data.json();\n                })\n                .then(data => {\n                    console.log(data);\n                    dispatch({ type: \"ARBEIDSTILSYNET/HENTET_FRA_ARBEIDSTILSYNET_OK\", data: data[0].Organisation });\n                })\n                .catch(err => {\n                    dispatch({ type: \"DATA/HENTING_AV_DATA_ERROR\", error: \"Klarte ikke hente data fra Arbeidstilsynet\" });\n                    console.warn(\"Klarte ikke hente data fra Arbeidstilsynet\", err);\n                });\n        }\n    }\n\n    function hentData() {\n        sokIEnhetsregisteret();\n        sokHosArbeidstilsynet();\n    }\n\n\n    return (\n        <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                <Form action=\"#\" onSubmit={(e) => e.preventDefault()}>\n                    <Form.Field>\n                        <label>Søk på organisasjonsnummer</label>\n                        <input value={orgnr} onChange={(e) => setOrgnr(e.currentTarget.value)} type=\"number\" id=\"orgnr\" aria-describedby=\"orgnr-sok\" />\n\n                    </Form.Field>\n                    <Button onClick={hentData}>Søk</Button>\n                </Form>\n                <OppsummeringEnhetsregister />\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport default Sokpage;","import React from 'react';\nimport './App.scss';\nimport Sokpage from './pages/sokpage';\nimport { Container } from \"semantic-ui-react\";\n\nconst App: React.FC = () => {\n  return (\n    <Container>\n      <Sokpage />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}